{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n  _requestResult(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n    }\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._requestResult(res));\n  }\n  getProfile() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._requestResult(res));\n  }\n  editProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._requestResult(res));\n  }\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._requestResult(res));\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._requestResult(res));\n  }\n  editAvatar(avatar) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._requestResult(res));\n  }\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes `, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._requestResult(res));\n  }\n  addLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes `, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._requestResult(res));\n  }\n}\nexport const api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-55',\n  headers: {\n    authorization: '41f9f9e3-d2ec-4659-9c48-5afdcb2e1b41',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","url","headers","_url","_headers","_requestResult","res","ok","json","Promise","reject","status","statusText","getInitialCards","fetch","then","getProfile","editProfile","name","about","method","body","JSON","stringify","addCard","link","deleteCard","id","editAvatar","avatar","deleteLike","addLike","api","authorization"],"sources":["C:/Users/79649/dev/mesto-react/mesto/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor({ url, headers }) {\r\n    this._url = url;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _requestResult(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n    }\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers,\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  getProfile() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n\r\n  editProfile(name, about) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n  addCard(name, link) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n  editAvatar(avatar) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      }),\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}/cards/${id}/likes `, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n  addLike(id) {\r\n    return fetch(`${this._url}/cards/${id}/likes `, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    }).then((res) => this._requestResult(res));\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-55',\r\n  headers: {\r\n    authorization: '41f9f9e3-d2ec-4659-9c48-5afdcb2e1b41',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}